<?php

/**
 * @file
 * @author sean
 * Adds autocomplete="off" to form text inputs
 */
 
 
/**
 * implements hook_form_alter
 */
function notocomplete_form_alter(&$form, &$form_state, $form_id) 
{
    // sanity - notify user of unknown error
    if( !$form || empty($form) ) {
        drupal_set_message('Notocomplete: Form not recognised', 'error');
    }
    
    // now go over each of the form fields looking for a plain text type
    $form = arrayScanAndTransform($form, '#type', 'textfield', 'setAutocomplete');
}

/**
 * scan an array for sub-arrays having a specific key with a specific value and perform some operation on them
 *
 * ie; scan for any sub-arrays where 'X' => Y then call a function that sets it to Z.
 * not using array_walk_recursive because it needs to operate on the whole array, rather than the item
 * warning: recursive!
 * 
 * @todo log something helpful on error
 * 
 * @param array $array scan for nested arrays in here
 * @param string $field scan for this key
 * @param mixed $value scan for this value (strict)
 * @param string $operation the function to run on matching sub-arrays
 * @return array|bool the modified array, or false on error
 */
function arrayScanAndTransform($array, $field, $value, $operation)
{
    // sanity
    if (!is_array($array)) {
        return false;
    }
    if (!function_exists($operation)) {
        return false;
    }
    
    // iterate over array
    foreach( $array as $key=>$val ) {
        
        // check for sub-arrays, do recursion
        if (is_array($val)) {
            $val = arrayScanAndTransform($val, $field, $value, $operation);
            $array[$key] = $val;
        }
        
        // check for matches. if found, operate on the array
        if ($key==$field && $val===$value) {
            $array = $operation($array);
        }
    }    
    
    return $array;
}

/**
 * insert the autocomplete=off key into an array (oversetting if it exists)
 * 
 * @todo log something helpful on error
 * 
 * @see http://www.midwesternmac.com/blogs/jeff-geerling/disabling-autocomplete-form
 *      https://api.drupal.org/api/drupal/developer!topics!forms_api_reference.html/7#attributes
 * 
 * @param array $array
 * @return array|bool the modified array, or false on error
 */
function setAutocomplete(&$array)
{
    // sanity
    if (!is_array($array)) {
        return false;
    }
    
    // weird edge case: #attributes exists, but it's not an array
    if (array_key_exists('#attributes', $array) && !is_array($array['#attributes'])) {
        return FALSE;
    }
    
    // create if not exists
    if (!array_key_exists('#attributes', $array)) {
        $array['#attributes'] = array();
    }
    
    // now set the autocomplete field
    $array['#attributes']['autocomplete'] = 'off';
    
    return $array;
}
